{
  "version": 3,
  "sources": ["../../chartjs-chart-financial/dist/chartjs-chart-financial.esm.js"],
  "sourcesContent": ["/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.1.1\n *\n * Copyright 2021 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\nimport { Chart, Element, defaults, BarController } from 'chart.js';\nimport { merge, valueOrDefault, isNullOrUndef, clipArea, unclipArea } from 'chart.js/helpers';\n\nconst globalOpts$2 = Chart.defaults;\n\nglobalOpts$2.elements.financial = {\n\tcolor: {\n\t\tup: 'rgba(80, 160, 115, 1)',\n\t\tdown: 'rgba(215, 85, 65, 1)',\n\t\tunchanged: 'rgba(90, 90, 90, 1)',\n\t}\n};\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {Rectangle} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n\tconst {x, y, base, width, height} = bar.getProps(['x', 'low', 'high', 'width', 'height'], useFinalPosition);\n\n\tlet left, right, top, bottom, half;\n\n\tif (bar.horizontal) {\n\t\thalf = height / 2;\n\t\tleft = Math.min(x, base);\n\t\tright = Math.max(x, base);\n\t\ttop = y - half;\n\t\tbottom = y + half;\n\t} else {\n\t\thalf = width / 2;\n\t\tleft = x - half;\n\t\tright = x + half;\n\t\ttop = Math.min(y, base); // use min because 0 pixel at top of screen\n\t\tbottom = Math.max(y, base);\n\t}\n\n\treturn {left, top, right, bottom};\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n\tconst skipX = x === null;\n\tconst skipY = y === null;\n\tconst bounds = !bar || (skipX && skipY) ? false : getBarBounds(bar, useFinalPosition);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nclass FinancialElement extends Element {\n\n\theight() {\n\t\treturn this.base - this.y;\n\t}\n\n\tinRange(mouseX, mouseY, useFinalPosition) {\n\t\treturn inRange(this, mouseX, mouseY, useFinalPosition);\n\t}\n\n\tinXRange(mouseX, useFinalPosition) {\n\t\treturn inRange(this, mouseX, null, useFinalPosition);\n\t}\n\n\tinYRange(mouseY, useFinalPosition) {\n\t\treturn inRange(this, null, mouseY, useFinalPosition);\n\t}\n\n\tgetRange(axis) {\n\t\treturn axis === 'x' ? this.width / 2 : this.height / 2;\n\t}\n\n\tgetCenterPoint(useFinalPosition) {\n\t\tconst {x, low, high} = this.getProps(['x', 'low', 'high'], useFinalPosition);\n\t\treturn {\n\t\t\tx,\n\t\t\ty: (high + low) / 2\n\t\t};\n\t}\n\n\ttooltipPosition(useFinalPosition) {\n\t\tconst {x, open, close} = this.getProps(['x', 'open', 'close'], useFinalPosition);\n\t\treturn {\n\t\t\tx,\n\t\t\ty: (open + close) / 2\n\t\t};\n\t}\n}\n\nconst globalOpts$1 = Chart.defaults;\n\nclass OhlcElement extends FinancialElement {\n\tdraw(ctx) {\n\t\tconst me = this;\n\n\t\tconst {x, open, high, low, close} = me;\n\n\t\tconst armLengthRatio = valueOrDefault(me.armLengthRatio, globalOpts$1.elements.ohlc.armLengthRatio);\n\t\tlet armLength = valueOrDefault(me.armLength, globalOpts$1.elements.ohlc.armLength);\n\t\tif (armLength === null) {\n\t\t\t// The width of an ohlc is affected by barPercentage and categoryPercentage\n\t\t\t// This behavior is caused by extending controller.financial, which extends controller.bar\n\t\t\t// barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n\t\t\t// and armLengthRatio is multipled by 0.5,\n\t\t\t// so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n\t\t\t// and when armLengthRatio=0.0, ohcl are just vertical lines.\n\t\t\tarmLength = me.width * armLengthRatio * 0.5;\n\t\t}\n\n\t\tif (close < open) {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts$1.elements.ohlc.color.up);\n\t\t} else if (close > open) {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts$1.elements.ohlc.color.down);\n\t\t} else {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts$1.elements.ohlc.color.unchanged);\n\t\t}\n\t\tctx.lineWidth = valueOrDefault(me.lineWidth, globalOpts$1.elements.ohlc.lineWidth);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, high);\n\t\tctx.lineTo(x, low);\n\t\tctx.moveTo(x - armLength, open);\n\t\tctx.lineTo(x, open);\n\t\tctx.moveTo(x + armLength, close);\n\t\tctx.lineTo(x, close);\n\t\tctx.stroke();\n\t}\n}\n\nOhlcElement.id = 'ohlc';\nOhlcElement.defaults = merge({}, [globalOpts$1.elements.financial, {\n\tlineWidth: 2,\n\tarmLength: null,\n\tarmLengthRatio: 0.8,\n}]);\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tlet min = scale._length;\n\tlet prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, Math.abs(curr - prev)) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nclass FinancialController extends BarController {\n\n\tgetLabelAndValue(index) {\n\t\tconst me = this;\n\t\tconst parsed = me.getParsed(index);\n\t\tconst axis = me._cachedMeta.iScale.axis;\n\n\t\tconst {o, h, l, c} = parsed;\n\t\tconst value = `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\n\t\treturn {\n\t\t\tlabel: `${me._cachedMeta.iScale.getLabelForValue(parsed[axis])}`,\n\t\t\tvalue\n\t\t};\n\t}\n\n\tgetAllParsedValues() {\n\t\tconst meta = this._cachedMeta;\n\t\tconst axis = meta.iScale.axis;\n\t\tconst parsed = meta._parsed;\n\t\tconst values = [];\n\t\tfor (let i = 0; i < parsed.length; ++i) {\n\t\t\tvalues.push(parsed[i][axis]);\n\t\t}\n\t\treturn values;\n\t}\n\n\t/**\n\t * Implement this ourselves since it doesn't handle high and low values\n\t * https://github.com/chartjs/Chart.js/issues/7328\n\t * @protected\n\t */\n\tgetMinMax(scale) {\n\t\tconst meta = this._cachedMeta;\n\t\tconst _parsed = meta._parsed;\n\t\tconst axis = meta.iScale.axis;\n\n\t\tif (_parsed.length < 2) {\n\t\t\treturn {min: 0, max: 1};\n\t\t}\n\n\t\tif (scale === meta.iScale) {\n\t\t\treturn {min: _parsed[0][axis], max: _parsed[_parsed.length - 1][axis]};\n\t\t}\n\n\t\tlet min = Number.POSITIVE_INFINITY;\n\t\tlet max = Number.NEGATIVE_INFINITY;\n\t\tfor (let i = 0; i < _parsed.length; i++) {\n\t\t\tconst data = _parsed[i];\n\t\t\tmin = Math.min(min, data.l);\n\t\t\tmax = Math.max(max, data.h);\n\t\t}\n\t\treturn {min, max};\n\t}\n\n\t_getRuler() {\n\t\tconst me = this;\n\t\tconst opts = me.options;\n\t\tconst meta = me._cachedMeta;\n\t\tconst iScale = meta.iScale;\n\t\tconst axis = iScale.axis;\n\t\tconst pixels = [];\n\t\tfor (let i = 0; i < meta.data.length; ++i) {\n\t\t\tpixels.push(iScale.getPixelForValue(me.getParsed(i)[axis]));\n\t\t}\n\t\tconst barThickness = opts.barThickness;\n\t\tconst min = computeMinSampleSize(iScale, pixels);\n\t\treturn {\n\t\t\tmin,\n\t\t\tpixels,\n\t\t\tstart: iScale._startPixel,\n\t\t\tend: iScale._endPixel,\n\t\t\tstackCount: me._getStackCount(),\n\t\t\tscale: iScale,\n\t\t\tratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n\t\t};\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tcalculateElementProperties(index, ruler, reset, options) {\n\t\tconst me = this;\n\t\tconst vscale = me._cachedMeta.vScale;\n\t\tconst base = vscale.getBasePixel();\n\t\tconst ipixels = me._calculateBarIndexPixels(index, ruler, options);\n\t\tconst data = me.chart.data.datasets[me.index].data[index];\n\t\tconst open = vscale.getPixelForValue(data.o);\n\t\tconst high = vscale.getPixelForValue(data.h);\n\t\tconst low = vscale.getPixelForValue(data.l);\n\t\tconst close = vscale.getPixelForValue(data.c);\n\n\t\treturn {\n\t\t\tbase: reset ? base : low,\n\t\t\tx: ipixels.center,\n\t\t\ty: (low + high) / 2,\n\t\t\twidth: ipixels.size,\n\t\t\topen,\n\t\t\thigh,\n\t\t\tlow,\n\t\t\tclose\n\t\t};\n\t}\n\n\tdraw() {\n\t\tconst me = this;\n\t\tconst chart = me.chart;\n\t\tconst rects = me._cachedMeta.data;\n\t\tclipArea(chart.ctx, chart.chartArea);\n\t\tfor (let i = 0; i < rects.length; ++i) {\n\t\t\trects[i].draw(me._ctx);\n\t\t}\n\t\tunclipArea(chart.ctx);\n\t}\n\n}\n\nFinancialController.overrides = {\n\tlabel: '',\n\n\tparsing: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tdatasets: {\n\t\tcategoryPercentage: 0.8,\n\t\tbarPercentage: 0.9,\n\t\tanimation: {\n\t\t\tnumbers: {\n\t\t\t\ttype: 'number',\n\t\t\t\tproperties: ['x', 'y', 'base', 'width', 'open', 'high', 'low', 'close']\n\t\t\t}\n\t\t}\n\t},\n\n\tscales: {\n\t\tx: {\n\t\t\ttype: 'timeseries',\n\t\t\toffset: true,\n\t\t\tticks: {\n\t\t\t\tmajor: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tfontStyle: context => context.tick.major ? 'bold' : undefined,\n\t\t\t\tsource: 'data',\n\t\t\t\tmaxRotation: 0,\n\t\t\t\tautoSkip: true,\n\t\t\t\tautoSkipPadding: 75,\n\t\t\t\tsampleSize: 100\n\t\t\t},\n\t\t\tafterBuildTicks: scale => {\n\t\t\t\tconst DateTime = window && window.luxon && window.luxon.DateTime;\n\t\t\t\tif (!DateTime) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst majorUnit = scale._majorUnit;\n\t\t\t\tconst ticks = scale.ticks;\n\t\t\t\tconst firstTick = ticks[0];\n\t\t\t\tif (!firstTick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet val = DateTime.fromMillis(firstTick.value);\n\t\t\t\tif ((majorUnit === 'minute' && val.second === 0)\n\t\t\t\t\t\t|| (majorUnit === 'hour' && val.minute === 0)\n\t\t\t\t\t\t|| (majorUnit === 'day' && val.hour === 9)\n\t\t\t\t\t\t|| (majorUnit === 'month' && val.day <= 3 && val.weekday === 1)\n\t\t\t\t\t\t|| (majorUnit === 'year' && val.month === 1)) {\n\t\t\t\t\tfirstTick.major = true;\n\t\t\t\t} else {\n\t\t\t\t\tfirstTick.major = false;\n\t\t\t\t}\n\t\t\t\tlet lastMajor = val.get(majorUnit);\n\n\t\t\t\tfor (let i = 1; i < ticks.length; i++) {\n\t\t\t\t\tconst tick = ticks[i];\n\t\t\t\t\tval = DateTime.fromMillis(tick.value);\n\t\t\t\t\tconst currMajor = val.get(majorUnit);\n\t\t\t\t\ttick.major = currMajor !== lastMajor;\n\t\t\t\t\tlastMajor = currMajor;\n\t\t\t\t}\n\t\t\t\tscale.ticks = ticks;\n\t\t\t}\n\t\t},\n\t\ty: {\n\t\t\ttype: 'linear'\n\t\t}\n\t},\n\n\tplugins: {\n\t\ttooltip: {\n\t\t\tintersect: false,\n\t\t\tmode: 'index',\n\t\t\tcallbacks: {\n\t\t\t\tlabel(ctx) {\n\t\t\t\t\tconst point = ctx.parsed;\n\n\t\t\t\t\tif (!isNullOrUndef(point.y)) {\n\t\t\t\t\t\treturn defaults.plugins.tooltip.callbacks.label(ctx);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {o, h, l, c} = point;\n\n\t\t\t\t\treturn `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nclass OhlcController extends FinancialController {\n\n\tupdateElements(elements, start, count, mode) {\n\t\tconst me = this;\n\t\tconst dataset = me.getDataset();\n\t\tconst ruler = me._ruler || me._getRuler();\n\t\tconst firstOpts = me.resolveDataElementOptions(start, mode);\n\t\tconst sharedOptions = me.getSharedOptions(firstOpts);\n\t\tconst includeOptions = me.includeOptions(mode, sharedOptions);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst options = sharedOptions || me.resolveDataElementOptions(i, mode);\n\n\t\t\tconst baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n\t\t\tconst properties = {\n\t\t\t\t...baseProperties,\n\t\t\t\tdatasetLabel: dataset.label || '',\n\t\t\t\tlineWidth: dataset.lineWidth,\n\t\t\t\tarmLength: dataset.armLength,\n\t\t\t\tarmLengthRatio: dataset.armLengthRatio,\n\t\t\t\tcolor: dataset.color,\n\t\t\t};\n\n\t\t\tif (includeOptions) {\n\t\t\t\tproperties.options = options;\n\t\t\t}\n\t\t\tme.updateElement(elements[i], i, properties, mode);\n\t\t}\n\t}\n\n}\n\nOhlcController.id = 'ohlc';\nOhlcController.defaults = merge({\n\tdataElementType: OhlcElement.id,\n\tdatasets: {\n\t\tbarPercentage: 1.0,\n\t\tcategoryPercentage: 1.0\n\t}\n}, Chart.defaults.financial);\n\nconst globalOpts = Chart.defaults;\n\nclass CandlestickElement extends FinancialElement {\n\tdraw(ctx) {\n\t\tconst me = this;\n\n\t\tconst {x, open, high, low, close} = me;\n\n\t\tlet borderColors = me.borderColor;\n\t\tif (typeof borderColors === 'string') {\n\t\t\tborderColors = {\n\t\t\t\tup: borderColors,\n\t\t\t\tdown: borderColors,\n\t\t\t\tunchanged: borderColors\n\t\t\t};\n\t\t}\n\n\t\tlet borderColor;\n\t\tif (close < open) {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.up : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts.elements.candlestick.color.up);\n\t\t} else if (close > open) {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.down : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts.elements.candlestick.color.down);\n\t\t} else {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.unchanged : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts.elements.candlestick.color.unchanged);\n\t\t}\n\n\t\tctx.lineWidth = valueOrDefault(me.borderWidth, globalOpts.elements.candlestick.borderWidth);\n\t\tctx.strokeStyle = valueOrDefault(borderColor, globalOpts.elements.candlestick.borderColor);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, high);\n\t\tctx.lineTo(x, Math.min(open, close));\n\t\tctx.moveTo(x, low);\n\t\tctx.lineTo(x, Math.max(open, close));\n\t\tctx.stroke();\n\t\tctx.fillRect(x - me.width / 2, close, me.width, open - close);\n\t\tctx.strokeRect(x - me.width / 2, close, me.width, open - close);\n\t\tctx.closePath();\n\t}\n}\n\nCandlestickElement.id = 'candlestick';\nCandlestickElement.defaults = merge({}, [globalOpts.elements.financial, {\n\tborderColor: globalOpts.elements.financial.color.unchanged,\n\tborderWidth: 1,\n}]);\n\nclass CandlestickController extends FinancialController {\n\n\tupdateElements(elements, start, count, mode) {\n\t\tconst me = this;\n\t\tconst dataset = me.getDataset();\n\t\tconst ruler = me._ruler || me._getRuler();\n\t\tconst firstOpts = me.resolveDataElementOptions(start, mode);\n\t\tconst sharedOptions = me.getSharedOptions(firstOpts);\n\t\tconst includeOptions = me.includeOptions(mode, sharedOptions);\n\n\t\tme.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n\t\tfor (let i = start; i < count; i++) {\n\t\t\tconst options = sharedOptions || me.resolveDataElementOptions(i, mode);\n\n\t\t\tconst baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n\t\t\tconst properties = {\n\t\t\t\t...baseProperties,\n\t\t\t\tdatasetLabel: dataset.label || '',\n\t\t\t\t// label: '', // to get label value please use dataset.data[index].label\n\n\t\t\t\t// Appearance\n\t\t\t\tcolor: dataset.color,\n\t\t\t\tborderColor: dataset.borderColor,\n\t\t\t\tborderWidth: dataset.borderWidth,\n\t\t\t};\n\n\t\t\tif (includeOptions) {\n\t\t\t\tproperties.options = options;\n\t\t\t}\n\t\t\tme.updateElement(elements[i], i, properties, mode);\n\t\t}\n\t}\n\n}\n\nCandlestickController.id = 'candlestick';\nCandlestickController.defaults = merge({\n\tdataElementType: CandlestickElement.id\n}, Chart.defaults.financial);\n\nexport { CandlestickController, CandlestickElement, OhlcController, OhlcElement };\n"],
  "mappings": "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",
  "names": []
}
